format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/test
compile options:
2 items
0 -> -deprecation
1 -> -unchecked
javac options:
9 items
0 -> -source
1 -> 11
2 -> -target
3 -> 11
4 -> -d
5 -> /home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/test
6 -> -g
7 -> -proc:none
8 -> -XDuseUnsharedTable=true
compiler version:
1 items
0 -> 2.12.10
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/test/test/scala/WordCountTest.class
binary dependencies:
6 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.10/3509860bc2e5b3da001ed45aca94ffbe5694dbda/scala-library-2.12.10.jar
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/.gradle/caches/modules-2/files-2.1/org.scalactic/scalactic_2.12/3.0.8/b50559dfc4a691c1089f9c8812e1d6fd17f80277/scalactic_2.12-3.0.8.jar
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest_2.12/3.0.8/8493ffa579676977b810a7a9fdc23af9d3c8af7f/scalatest_2.12-3.0.8.jar
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/main/main/scala/WordCount$.class
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> /home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/main/main/scala/WordCount.class
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> test.scala.WordCountTest
used names:
62 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> ->
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> <byname>
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> <init>
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> <repeated>
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> A
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Any
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> AnyShouldWrapper
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> ArrowAssoc
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Assertion
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> B
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Class
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> FlatSpec
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Int
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> ItVerbString
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> ItWord
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> JUnitRunner
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Map
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Matchers
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Nothing
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Position
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Predef
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Prettifier
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> RunWith
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> String
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> StringShouldWrapper
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> T
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Tuple2
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> URL
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> Unit
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> WordCount
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> WordCountTest
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> apply
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> content
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> convertToAnyShouldWrapper
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> convertToStringShouldWrapper
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> countWordsOccurrences
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> default
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> fileContentActual
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> fileContentExpected
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> filePath
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> getClass
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> getPath
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> getResource
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> here
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> in
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> it
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> junit
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> main
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> org
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> package
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> readInputFile
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> runner
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> scala
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> scalactic
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> scalatest
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> scalatestplus
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> should
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> shouldBe
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> source
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> test
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> wordCountActual
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> workContentExpected
product stamps:
1 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/test/test/scala/WordCountTest.class -> lastModified(1581602857704)
source stamps:
1 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> hash(850229d624a31f54f53a3d068866cdce8144941a)
binary stamps:
6 items
/home/tereza/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar -> lastModified(1581262654843)
/home/tereza/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.10/3509860bc2e5b3da001ed45aca94ffbe5694dbda/scala-library-2.12.10.jar -> lastModified(1581444116570)
/home/tereza/.gradle/caches/modules-2/files-2.1/org.scalactic/scalactic_2.12/3.0.8/b50559dfc4a691c1089f9c8812e1d6fd17f80277/scalactic_2.12-3.0.8.jar -> lastModified(1581444127927)
/home/tereza/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest_2.12/3.0.8/8493ffa579676977b810a7a9fdc23af9d3c8af7f/scalatest_2.12-3.0.8.jar -> lastModified(1581444127659)
/home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/main/main/scala/WordCount$.class -> lastModified(1581602856484)
/home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/main/main/scala/WordCount.class -> lastModified(1581602856484)
class names:
6 items
/home/tereza/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar -> org.junit.runner.RunWith
/home/tereza/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.10/3509860bc2e5b3da001ed45aca94ffbe5694dbda/scala-library-2.12.10.jar -> scala.Tuple2
/home/tereza/.gradle/caches/modules-2/files-2.1/org.scalactic/scalactic_2.12/3.0.8/b50559dfc4a691c1089f9c8812e1d6fd17f80277/scalactic_2.12-3.0.8.jar -> org.scalactic.source.Position
/home/tereza/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest_2.12/3.0.8/8493ffa579676977b810a7a9fdc23af9d3c8af7f/scalatest_2.12-3.0.8.jar -> org.scalatest.Matchers
/home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/main/main/scala/WordCount$.class -> main.scala.WordCount$
/home/tereza/github/Cisco-challenge/Cisco-challenge/build/classes/scala/main/main/scala/WordCount.class -> main.scala.WordCount
internal apis:
1 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> 

external apis:
0 items
source infos:
1 items
/home/tereza/github/Cisco-challenge/Cisco-challenge/src/test/scala/WordCountTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABcD7gXop1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9ob21lL3RlcmV6YS9naXRodWIvQ2lzY28tY2hhbGxlbmdlL0Npc2NvLWNoYWxsZW5nZS9idWlsZC9jbGFzc2VzL3NjYWxhL3Rlc3R0AAEv
